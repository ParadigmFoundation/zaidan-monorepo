syntax = "proto3";

option go_package = "grpc";

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

import "types.proto";

service OrderBookManager {
  rpc OrderBook(OrderBookRequest) returns (OrderBookResponse);
  rpc Updates(OrderBookUpdatesRequest) returns (stream OrderBookResponse);
}

service Maker {
  rpc GetQuote(GetQuoteRequest) returns (GetQuoteResponse);
  rpc CheckQuote(CheckQuoteRequest) returns (CheckQuoteResponse);
}

service TransactionStatus {
    rpc OrderStatusUpdate(OrderStatusUpdateRequest) returns (OrderStatusUpdateResponse);
}

service HotWallet {
    rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse);
    rpc GetAllowance(GetAllowanceRequest) returns (GetAllowanceResponse);
    rpc SetAllowance(SetAllowanceRequest) returns (SetAllowanceResponse);
    rpc GetTokenBalance(GetBalanceRequest) returns (GetBalanceResponse);
    rpc GetEtherBalance(GetBalanceRequest) returns (GetBalanceResponse);
    rpc TransferEther(TransferRequest) returns (TransferResponse);
    rpc TransferToken(TransferRequest) returns (TransferResponse);
    rpc SendTransaction(SendTransactionRequest) returns (SendTransactionResponse);
    rpc ExecuteZeroExTransaction(ExecuteZeroExTransactionRequest) returns (ExecuteZeroExTransactionResponse);
}

service Watcher {
    rpc WatchTransaction(WatchTransactionRequest) returns (WatchTransactionResponse);
}

service ExchangeManager {
  rpc CreateOrder(ExchangeCreateOrderRequest) returns (ExchangeOrderResponse);
  rpc GetOrder(ExchangeOrderRequest) returns (ExchangeOrderResponse);
  rpc GetOpenOrders(google.protobuf.StringValue) returns (ExchangeOrderArrayResponse);
  rpc CancelOrder(ExchangeOrderRequest) returns (google.protobuf.Empty);
}
